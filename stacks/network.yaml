AWSTemplateFormatVersion: "2010-09-09"

Description: Networking configuration for the seed infrastructure

Mappings:

  AvailabilityZone:
    eu-west-1:
      a: eu-west-1a
    eu-west-2:
      a: eu-west-2a

  CidrBlock:
    eu-west-1:
      vpc: 10.1.0.0/16
      subnet: 10.1.1.0/24
    eu-west-2:
      vpc: 10.0.0.0/16
      subnet: 10.0.1.0/24

Resources:

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [CidrBlock, !Ref "AWS::Region", vpc]
      Tags:
      - { Key: Name, Value: io-stuartw-seed-vpc }

  SeedSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !FindInMap [AvailabilityZone, !Ref "AWS::Region", a]
      CidrBlock: !FindInMap [CidrBlock, !Ref "AWS::Region", subnet]
      MapPublicIpOnLaunch: true
      Tags:
      - { Key: Name, Value: io-stuartw-seed-subnet }

  SeedInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - { Key: Name, Value: io-stuartw-seed-igw }

  VpcInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref SeedInternetGateway

  SeedRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - { Key: Name, Value: io-stuartw-seed-rtb }

  SeedInternetIpV4Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref SeedRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref SeedInternetGateway

  SeedInternetIpV6Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref SeedRouteTable
      DestinationIpv6CidrBlock: ::/0
      GatewayId: !Ref SeedInternetGateway

  SeedRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref SeedRouteTable
      SubnetId: !Ref SeedSubnet

  SeedOutboundInternetHttpSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Outbound access to internet over HTTP.
      SecurityGroupEgress:
      - FromPort: 80
        ToPort: 80
        IpProtocol: tcp
        CidrIp: 0.0.0.0/0
      - FromPort: 443
        ToPort: 443
        IpProtocol: tcp
        CidrIp: 0.0.0.0/0
      Tags:
      - { Key: Name, Value: io-stuartw-seed-outbound-internet-http-sg }

  SeedInboundJenkinsAdminSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Inbound access for Jenkins administration.
      SecurityGroupIngress:
      - FromPort: 8080
        ToPort: 8080
        IpProtocol: tcp
        CidrIp: 86.11.0.0/16
      Tags:
      - { Key: Name, Value: io-stuartw-seed-inbound-jenkins-admin-sg }

  SeedInboundSshSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Inbound access via SSH.
      SecurityGroupIngress:
      - FromPort: 22
        ToPort: 22
        IpProtocol: tcp
        CidrIp: 86.11.0.0/16
      Tags:
      - { Key: Name, Value: io-stuartw-seed-inbound-ssh-sg }

  SeedRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: io-stuartw-seed-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AdministratorAccess
      Path: /

Outputs:

  Vpc:
    Description: The seed network.
    Value: !Ref Vpc
    Export:
      Name: !Sub ${AWS::StackName}:io-stuartw-seed-vpc

  SeedSubnet:
    Description: The seed subnet.
    Value: !Ref SeedSubnet
    Export:
      Name: !Sub ${AWS::StackName}:io-stuartw-seed-subnet

  SeedOutboundInternetHttpSecurityGroup:
    Description: Outbound access to internet over HTTP.
    Value: !Ref SeedOutboundInternetHttpSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}:io-stuartw-seed-outbound-internet-http-sg

  SeedInboundJenkinsAdminSecurityGroup:
    Description: Inbound access for Jenkins administration.
    Value: !Ref SeedInboundJenkinsAdminSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}:io-stuartw-seed-inbound-jenkins-admin-sg

  SeedInboundSshSecurityGroup:
    Description: Inbound access via SSH.
    Value: !Ref SeedInboundSshSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}:io-stuartw-seed-inbound-ssh-sg

  SeedRole:
    Description: Access role for seed instances.
    Value: !Ref SeedRole
    Export:
      Name: !Sub ${AWS::StackName}:io-stuartw-seed-role
